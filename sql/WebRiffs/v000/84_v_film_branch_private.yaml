
# Contains the explicit user definitions for a branch; in the case where users
# are deliberately added into a branch, the Privilege_Level is considered a
# flag - either the user is granted that access (> 0) or removed from that
# access (<= 0).

view:
    viewName: V_FILM_BRANCH_PRIVATE
    query: "SELECT
          fba.Gv_Branch_Id Gv_Branch_Id
          , fba.User_Id User_Id
          , fba.Access Access
          
          , CASE
              WHEN fba.Privilege_Level > 0 THEN
                1
              ELSE
                0
              END
              Allowed
        FROM FILM_BRANCH_ACCESS fba
        WHERE fba.User_Id IS NOT NULL
        "
    columns:
        - column:
            name: Gv_Branch_Id
            type: int
            constraints:
                - constraint:
                    type: foreign key
                    table: GV_BRANCH
                    column: Gv_Branch_Id
        - column:
            name: User_Id
            type: int
            constraints:
                - constraint:
                    type: foreign key
                    table: USER
                    column: User_Id
        - column:
            name: Access
            type: varchar(64)
        - column:
            name: Allowed
            type: tinyint
    constraints:
        - constraint:
            type: fake index
            columns: Gv_Branch_Id, User_Id
            