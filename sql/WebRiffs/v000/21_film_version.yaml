# Stores a specific list of quips for a film.  A film can have many different
# versions.  The app will need to be able to manage version operations
# (merge, fork, etc).  A parented film version means that it overrides the
# parent quips.  A transparent parent means that all quips in the parent that
# are not overridden by the child will be visible.


table:
    tableName: FILM_VERSION
    columns:
        - column:
            name: Film_Version_Id
            type: int
            autoIncrement: true
            constraints:
                - constraint:
                    type: primary key
                    name: Film_Version_Id_Key
        - column:
            name: Film_Id
            type: int
            constraints:
                - constraint:
                    type: not null
                - constraint:
                    type: foreign key
                    name: Film_Version__Film_Id_FK
                    table: FILM
                    column: Film_Id
                    relationship: owner

        # The parent from which this film version was copied / branched.  This
        # also means that a film version represents a single "change list".
        - column:
            name: Parent_Film_Version_Id
            type: int
            constraints:
                - constraint:
                    # Null means there is no parent
                    type: nullable
                # Don't make this a real foreign key, as it can cause all
                # kinds of unexpected trouble
                - constraint:
                    type: fake foreign key
                    name: Film_Version__Film_Version_Id_FK
                    table: FILM_VERSION
                    column: Film_Version_Id
                - constraint:
                    type: index
                    name: Film_Version__Parent_Film_version_Id_IDX

        # An inactive film version means that the user's list of quips and
        # other changes haven't been committed.  This is the equivalent to
        # a "pending changelist".
        - column:
            name: Active
            type: tinyint
            constraints:
                - constraint:
                    type: not null
        - column:
            name: Author_User_Id
            type: int
            constraints:
                - constraint:
                    type: not null
                - constraint:
                    type: foreign key
                    name: Film_Version__User_Id_FK
                    table: USER
                    column: User_Id
        - column:
            name: Name
            type: nvarchar(255)
            constraints:
                - constraint:
                    type: not null
        - column:
            name: Created_On
            type: timestamp
            constraints:
                - constraint:
                    type: not null
                - constraint:
                    type: no update
                - constraint:
                    type: initial value
                    dialects:
                        - dialect:
                            platforms: mysql
                            sql: NOW()
        - column:
            name: Last_Updated_On
            type: timestamp
            constraints:
                - constraint:
                    type: nullable
                - constraint:
                    type: constant update
                    dialects:
                        - dialect:
                            platforms: mysql
                            sql: NOW()
                - constraint:
                    type: initial value
                    value: "NULL"
